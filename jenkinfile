pipeline {
    agent any

    stages {
        stage('Checkout GIT') {
            steps {
                echo 'Pulling...'
                git branch: 'OussamaJaouadi_sim1_G8', url: 'https://github.com/loukill/5SIM1-G5-Gestion-Station-Ski.git'
                }
        }
        stage('Nettoyage du projet') {
            steps {
                sh 'mvn clean'
            }
        }
        stage('Compilation du projet') {
            steps {
                sh 'mvn compile'
            }
        }
       
        stage('Mockito/JUnit tests') {
            steps {
                sh 'mvn test -Pmockito-tests'
            }
        }
        stage('Jacoco') {
            steps {
                sh 'mvn jacoco:report'
            }
        }
        stage('SonarQube Analysis') {
            environment {
                SONARQUBE_SERVER = 'http://192.168.119.129:9000/'
            }
            steps {
                        sh """
                            mvn sonar:sonar \
                            -Dsonar.host.url=${SONARQUBE_SERVER} \
                            -Dsonar.login=admin \
                            -Dsonar.password=SonarQube@2024
                        """

            }
        }
         stage('Build Docker Image') {
            steps {
                script {
                    sh "mvn clean package"
                    sh "docker build -t oussjd/devops_project:0.0.1 ."
                }
            }
        }
        stage('Deploying docker image') {
            steps {
                script {
                    sh "docker login -u oussjd -p docker@2024"
                    sh "docker push oussjd/devops_project:0.0.1"
 
                }
            }
        }
        stage('Docker-compose'){
            steps{
                sh "docker compose down"
                sh 'docker compose up --remove-orphans -d'
            }
        }
        stage('Nexus Deploy') {
            steps {
                script {
                    // Run the 'mvn deploy' command with the '-DskipTests=true' option
                    sh "mvn deploy -DskipTests=true"
                }
            }
        }
    }
}
